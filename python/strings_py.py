# -*- coding: utf-8 -*-
"""strings.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jP5vayicA-QF9-OVtqCzQxnthjQJtC7g
"""

# string : the datatypes which stores sequences of characters
# escape sequence character
# tab(/t) and (/n)next line
str1 = "this is string  \n we are in python"
print(str1)

str1 = "this is string. \t We are in python"
print(str1)

# String concatenation in Python refers to the process of combining two or more strings into a single, new string.
str1 = "deepak"
str2 = "singh"
result = str1 + str2
print(result)

# length of string
str1 = "deepak"
print(len(str1))

str1 = "deepak"
str2 = "singh"
print(str1 + " " + str2)

# first occurence
name = "deepak singh"
print(name.find(" ")) #gives the first occurence of character

# last occurence
name = "bro code"
result = name.rfind("o")
print(result)

name = "deepak singh"
print(name.upper())

name = "DEEPAK SINGH"
print(name.lower())

name = "deepak singh"
print(name.isdigit()) #only digits allowed

name = "bro 123"
print(name.isdigit())

name = "123455"
print(name.isdigit())

name = "deepak singh"
print(name.isalpha())

name = "brocode"
print(name.isalpha())

name = "bro 1234"
print(name.isalpha())

phone_number = (input("enter the mobile number: "))
result = phone_number.count("-")
print(result)

phone = input("enter the number: ")
phone = (phone.replace("-","^"))
print(phone)

str = "deepak singh"
print(str.capitalize())

str = "deepak singh"
result = str.replace("e","o")
print(result)

str = "i am deepak singh"
print(str.count("e"))

# user input exercise
# username is no more than 12 characters
# username not contain spaces
# username not contain digits

username = input("enter the username: ")
if len(username) > 12:
  print("username cant be greater than 12!")
elif  not username.find(" ") == -1:
  print("username cant contain spaces!")
elif not username.isalpha():
  print("username cant contain digits!")
else:
  print(f"welcome {username}")

# Indexing in Python refers to the process of accessing individual elements within a sequence (such as a string, list, or tuple) using their position. Each element in a sequence is assigned a unique integer called an index, which represents its order within the sequence.
# [start:end:step]
credit_no = "1234-5678-9012-3456"
print(credit_no[0])
print(credit_no[0:4])
print(credit_no[5:9])
print(credit_no[10:14])
print(credit_no[15:19])

# negative indexing
credit_no = "1234-5678-9012-3456"
print(credit_no[-1])
print(credit_no[-4:-1])
print(credit_no[-5:-1])

# reverse a string
str = "apple"
print(str[::-1])

# Conditional statements in Python allow for the execution of specific code blocks based on whether a given condition evaluates to True or False. These statements are fundamental for controlling the flow of a program and enabling decision-making.
age = 20
if age >= 18:
  print("You are eligible to vote.")

status = print("Adult" if age >= 18 else "Minor")

score = 85
if score >= 90:
  print("Grade: A")
elif score >= 80:
  print("Grade: B")
elif score >= 70:
  print("Grade: C")
else:
  print("Grade: F")

# Nested conditional statements, or nested if statements, are conditional statements placed inside other conditional statements. This structure allows for more complex decision-making logic where multiple conditions need to be evaluated in a hierarchical manner.
score = 85
attendance = 92

if score >= 70:
    if attendance >= 80:
        print("Student passed with good attendance.")
    else:
        print("Student passed, but attendance needs improvement.")
else:
    print("Student did not pass.")

# to check if a number is even or not
num = int(input("enter the number: "))
if num % 2 == 0:
  print("even")
else:
  print("odd")

# conditional statement: one line shortcut for if-else statement
num = 24
print("even" if num%2==0 else "odd")

num = 4
print("positive" if num>0 else"negative")

user_role = "deepak"
print("full access" if user_role == "deepak" else "not")

a = 7
b=5
print(max(a,b))

a = 7
b = 5
max_num = print(a if a>b else b)

temperature = 30
print("hot" if temperature > 30 else "cold")